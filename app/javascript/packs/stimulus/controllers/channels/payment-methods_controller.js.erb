import { Controller } from 'stimulus';
import consumer from './../../../../channels/consumer.js';

export default class extends Controller {
  static targets = ["inputGroup"]

  connect() {
    this.channel = consumer.subscriptions.create(
      {
        channel: 'PaymentMethodsChannel',
        user_id: this.data.get("userId")
      },
      {
        connected: this._cableConnected.bind(this),
        disconnected: this._cableDisconnected.bind(this),
        received: this._cableReceived.bind(this),
      }
    );
  }

  _cableConnected() {
    // Called when the subscription is ready for use on the server
  }

  _cableDisconnected() {
    // Called when the subscription has been terminated by the server
  }

  _cableReceived(data) {
    // Called when there's incoming data on the websocket for this channel
    const option = this.dataToOption(data)

    $("#order_payment_method_id").append(option).trigger('change')

    $("#empty_payment_method_button").remove()
    $(this.inputGroupTarget).removeClass('d-none')
  }

  dataToOption(data) {
    return new Option(`**** **** **** ${data.card.last4}`, data.id, false, true)
  }
}
